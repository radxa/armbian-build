From 39f780efdba1977043d5cfe704e628b54e88f193 Mon Sep 17 00:00:00 2001
From: Finley Xiao <finley.xiao@rock-chips.com>
Date: Wed, 28 Jul 2021 18:48:11 +0800
Subject: [PATCH 02/19] rockchip: rk3308: fixup opp table for rk3308bs

Change-Id: Ief90c561aaa42acb1e617056a745023a85f81a14
Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
(cherry picked from commit c6ee75eec14f147a49842de2effb420440f82252)
---
 arch/arm/mach-rockchip/rk3308/rk3308.c | 79 ++++++++++++++++++++++++++++++++++
 1 file changed, 79 insertions(+)

diff --git a/arch/arm/mach-rockchip/rk3308/rk3308.c b/arch/arm/mach-rockchip/rk3308/rk3308.c
index 9bdcc87..cc9f003 100644
--- a/arch/arm/mach-rockchip/rk3308/rk3308.c
+++ b/arch/arm/mach-rockchip/rk3308/rk3308.c
@@ -203,3 +203,82 @@ int arch_cpu_init(void)
 	return 0;
 }
 #endif
+
+static int fdt_fixup_cpu_opp_table(const void *blob)
+{
+	int opp_node, cpu_node, sub_node;
+	int len;
+	u32 phandle;
+	u32 *pp;
+
+	opp_node = fdt_path_offset(blob, "/rk3308bs-cpu0-opp-table");
+	if (opp_node < 0) {
+		printf("Failed to get rk3308bs-cpu0-opp-table node\n");
+		return -EINVAL;
+	}
+
+	phandle = fdt_get_phandle(blob, opp_node);
+	if (!phandle) {
+		printf("Failed to get cpu opp table phandle\n");
+		return -EINVAL;
+	}
+
+	cpu_node = fdt_path_offset(blob, "/cpus");
+	if (cpu_node < 0) {
+		printf("Failed to get cpus node\n");
+		return -EINVAL;
+	}
+
+	fdt_for_each_subnode(sub_node, blob, cpu_node) {
+		pp = (u32 *)fdt_getprop(blob, sub_node, "operating-points-v2",
+					&len);
+		if (!pp)
+			continue;
+		pp[0] = cpu_to_fdt32(phandle);
+	}
+
+	return 0;
+}
+
+static int fdt_fixup_dmc_opp_table(const void *blob)
+{
+	int opp_node, dmc_node;
+	int len;
+	u32 phandle;
+	u32 *pp;
+
+	opp_node = fdt_path_offset(blob, "/rk3308bs-dmc-opp-table");
+	if (opp_node < 0) {
+		printf("Failed to get rk3308bs-dmc-opp-table node\n");
+		return -EINVAL;
+	}
+
+	phandle = fdt_get_phandle(blob, opp_node);
+	if (!phandle) {
+		printf("Failed to get dmc opp table phandle\n");
+		return -EINVAL;
+	}
+
+	dmc_node = fdt_path_offset(blob, "/dmc");
+	if (dmc_node < 0) {
+		printf("Failed to get dmc node\n");
+		return -EINVAL;
+	}
+
+	pp = (u32 *)fdt_getprop(blob, dmc_node, "operating-points-v2", &len);
+	if (!pp)
+		return 0;
+	pp[0] = cpu_to_fdt32(phandle);
+
+	return 0;
+}
+
+int rk_board_fdt_fixup(const void *blob)
+{
+	if (soc_is_rk3308bs()) {
+		fdt_fixup_cpu_opp_table(blob);
+		fdt_fixup_dmc_opp_table(blob);
+	}
+
+	return 0;
+}
-- 
2.7.4

