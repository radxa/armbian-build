From 6d4b2e6e183a418255b8bcc6063ceabf918aff27 Mon Sep 17 00:00:00 2001
From: Finley Xiao <finley.xiao@rock-chips.com>
Date: Sun, 16 Jan 2022 19:44:05 +0800
Subject: [PATCH 3/3] thermal: rockchip: Add conversion time for rk3308bs

Change-Id: I48dc8f82a3d1f05d613812a8c169f3cbec4f0d74
Signed-off-by: Finley Xiao <finley.xiao@rock-chips.com>
Reviewed-on: https://10.10.10.29/c/rk/kernel-stable/+/144084
Reviewed-by: Hans Yang <yhx@rock-chips.com>
Tested-by: Hans Yang <yhx@rock-chips.com>
---
 drivers/thermal/rockchip_thermal.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/thermal/rockchip_thermal.c b/drivers/thermal/rockchip_thermal.c
index 914047e9f5c2..604995d8e3d6 100644
--- a/drivers/thermal/rockchip_thermal.c
+++ b/drivers/thermal/rockchip_thermal.c
@@ -94,6 +94,7 @@ struct chip_tsadc_table {
  * struct rockchip_tsadc_chip - hold the private data of tsadc chip
  * @chn_id[SOC_MAX_SENSORS]: the sensor id of chip correspond to the channel
  * @chn_num: the channel number of tsadc chip
+ * @conversion_time: the conversion time of tsadc
  * @tshut_temp: the hardware-controlled shutdown temperature value
  * @tshut_mode: the hardware-controlled shutdown mode (0:CRU 1:GPIO)
  * @tshut_polarity: the hardware-controlled active polarity (0:LOW 1:HIGH)
@@ -110,6 +111,9 @@ struct rockchip_tsadc_chip {
 	int chn_id[SOC_MAX_SENSORS];
 	int chn_num;
 
+	/* The sensor electrical characteristics */
+	int conversion_time;
+
 	/* The hardware-controlled tshut property */
 	int tshut_temp;
 	enum tshut_mode tshut_mode;
@@ -999,6 +1003,8 @@ static const struct rockchip_tsadc_chip rk3308bs_tsadc_data = {
 	.chn_id[SENSOR_CPU] = 0, /* cpu sensor is channel 0 */
 	.chn_num = 1, /* 1 channels for tsadc */
 
+	.conversion_time = 2100, /* us */
+
 	.tshut_mode = TSHUT_MODE_CRU, /* default TSHUT via CRU */
 	.tshut_temp = 95000,
 
@@ -1506,6 +1512,9 @@ static int rockchip_thermal_probe(struct platform_device *pdev)
 	}
 
 	thermal->chip->control(thermal->regs, true);
+	if (thermal->chip->conversion_time)
+		usleep_range(thermal->chip->conversion_time,
+			     thermal->chip->conversion_time + 50);
 
 	for (i = 0; i < thermal->chip->chn_num; i++)
 		rockchip_thermal_toggle_sensor(&thermal->sensors[i], true);
@@ -1615,6 +1624,9 @@ static int __maybe_unused rockchip_thermal_resume(struct device *dev)
 	}
 
 	thermal->chip->control(thermal->regs, true);
+	if (thermal->chip->conversion_time)
+		usleep_range(thermal->chip->conversion_time,
+			     thermal->chip->conversion_time + 50);
 
 	for (i = 0; i < thermal->chip->chn_num; i++)
 		rockchip_thermal_toggle_sensor(&thermal->sensors[i], true);
-- 
2.17.1

